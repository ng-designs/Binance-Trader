<!--
    *
    *MIT License
    *
    *Copyright (c) 2022 S Christison
    *
    *Permission is hereby granted, free of charge, to any person obtaining a copy
    *of this software and associated documentation files (the "Software"), to deal
    *in the Software without restriction, including without limitation the rights
    *to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
    *copies of the Software, and to permit persons to whom the Software is
    *furnished to do so, subject to the following conditions:
    *
    *The above copyright notice and this permission notice shall be included in all
    *copies or substantial portions of the Software.
    *
    *THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
    *IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
    *FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
    *AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
    *LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
    *OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
    *SOFTWARE.
    *
-->

<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:msi="clr-namespace:MS.Internal;assembly=PresentationFramework"
    xmlns:s="clr-namespace:System;assembly=mscorlib">
    <Style x:Key="TextBoxRounded" TargetType="TextBox">
        <Style.BasedOn>
            <Style TargetType="TextBoxBase">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Path=(msi:FrameworkAppContextSwitches.UseAdornerForTextboxSelectionRendering)}" Value="false">
                        <Setter Property="TextBoxBase.SelectionBrush">
                            <Setter.Value>
                                <DynamicResource ResourceKey="{x:Static SystemColors.HighlightBrushKey}" />
                            </Setter.Value>
                        </Setter>
                        <Setter Property="TextBoxBase.SelectionTextBrush">
                            <Setter.Value>
                                <DynamicResource ResourceKey="{x:Static SystemColors.HighlightTextBrushKey}" />
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="TextBoxBase.IsInactiveSelectionHighlightEnabled">
                                <Condition.Value>
                                    <s:Boolean>True</s:Boolean>
                                </Condition.Value>
                            </Condition>
                            <Condition Property="TextBoxBase.IsSelectionActive">
                                <Condition.Value>
                                    <s:Boolean>False</s:Boolean>
                                </Condition.Value>
                            </Condition>
                        </MultiTrigger.Conditions>
                        <Setter Property="TextBoxBase.SelectionBrush">
                            <Setter.Value>
                                <DynamicResource ResourceKey="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" />
                            </Setter.Value>
                        </Setter>
                        <Setter Property="TextBoxBase.SelectionTextBrush">
                            <Setter.Value>
                                <DynamicResource ResourceKey="{x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}" />
                            </Setter.Value>
                        </Setter>
                    </MultiTrigger>
                </Style.Triggers>
                <Style.Resources>
                    <ResourceDictionary />
                </Style.Resources>
                <Setter Property="Panel.Background">
                    <Setter.Value>
                        <DynamicResource ResourceKey="{x:Static SystemColors.WindowBrushKey}" />
                    </Setter.Value>
                </Setter>
                <Setter Property="Border.BorderBrush">
                    <Setter.Value>
                        <SolidColorBrush>#FFABADB3</SolidColorBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="TextElement.Foreground">
                    <Setter.Value>
                        <DynamicResource ResourceKey="{x:Static SystemColors.ControlTextBrushKey}" />
                    </Setter.Value>
                </Setter>
                <Setter Property="Border.BorderThickness">
                    <Setter.Value>
                        <Thickness>1,1,1,1</Thickness>
                    </Setter.Value>
                </Setter>
                <Setter Property="KeyboardNavigation.TabNavigation">
                    <Setter.Value>
                        <x:Static Member="KeyboardNavigationMode.None" />
                    </Setter.Value>
                </Setter>
                <Setter Property="Control.HorizontalContentAlignment">
                    <Setter.Value>
                        <x:Static Member="HorizontalAlignment.Left" />
                    </Setter.Value>
                </Setter>
                <Setter Property="FrameworkElement.FocusVisualStyle">
                    <Setter.Value>
                        <x:Null />
                    </Setter.Value>
                </Setter>
                <Setter Property="UIElement.AllowDrop">
                    <Setter.Value>
                        <s:Boolean>True</s:Boolean>
                    </Setter.Value>
                </Setter>
                <Setter Property="ScrollViewer.PanningMode">
                    <Setter.Value>
                        <x:Static Member="PanningMode.VerticalFirst" />
                    </Setter.Value>
                </Setter>
                <Setter Property="Stylus.IsFlicksEnabled">
                    <Setter.Value>
                        <s:Boolean>False</s:Boolean>
                    </Setter.Value>
                </Setter>
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TextBoxBase">
                            <Border
                                Name="border"
                                Background="{TemplateBinding Panel.Background}"
                                BorderBrush="{TemplateBinding Border.BorderBrush}"
                                BorderThickness="{TemplateBinding Border.BorderThickness}"
                                CornerRadius="2"
                                SnapsToDevicePixels="True" >
                                <ScrollViewer
                                    Name="PART_ContentHost"
                                    Focusable="False"
                                    HorizontalScrollBarVisibility="Hidden"
                                    VerticalScrollBarVisibility="Hidden" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="UIElement.IsEnabled">
                                    <Setter TargetName="border" Property="UIElement.Opacity">
                                        <Setter.Value>
                                            <s:Double>0.56</s:Double>
                                        </Setter.Value>
                                    </Setter>
                                    <Trigger.Value>
                                        <s:Boolean>False</s:Boolean>
                                    </Trigger.Value>
                                </Trigger>
                                <Trigger Property="UIElement.IsMouseOver">
                                    <Setter TargetName="border" Property="Border.BorderBrush">
                                        <Setter.Value>
                                            <SolidColorBrush>#FF7EB4EA</SolidColorBrush>
                                        </Setter.Value>
                                    </Setter>
                                    <Trigger.Value>
                                        <s:Boolean>True</s:Boolean>
                                    </Trigger.Value>
                                </Trigger>
                                <Trigger Property="UIElement.IsKeyboardFocused">
                                    <Setter TargetName="border" Property="Border.BorderBrush">
                                        <Setter.Value>
                                            <SolidColorBrush>#FF569DE5</SolidColorBrush>
                                        </Setter.Value>
                                    </Setter>
                                    <Trigger.Value>
                                        <s:Boolean>True</s:Boolean>
                                    </Trigger.Value>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Style.BasedOn>
    </Style>
</ResourceDictionary>
