<!--
    *
    *MIT License
    *
    *Copyright (c) 2022 S Christison
    *
    *Permission is hereby granted, free of charge, to any person obtaining a copy
    *of this software and associated documentation files (the "Software"), to deal
    *in the Software without restriction, including without limitation the rights
    *to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
    *copies of the Software, and to permit persons to whom the Software is
    *furnished to do so, subject to the following conditions:
    *
    *The above copyright notice and this permission notice shall be included in all
    *copies or substantial portions of the Software.
    *
    *THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
    *IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
    *FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
    *AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
    *LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
    *OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
    *SOFTWARE.
    *
-->

<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:s="clr-namespace:System;assembly=mscorlib">
    <Style x:Key="ExitButton" TargetType="Button">
        <Style.Resources>
            <BitmapImage x:Key="ExitDefault" UriSource="/BV/Resources/Exit/close-button.png" />
            <BitmapImage x:Key="ExitMouseOver" UriSource="/BV/Resources/Exit/close-button-mouseover.png" />
            <BitmapImage x:Key="ExitPressed" UriSource="/BV/Resources/Exit/close-button-pressed.png" />
            <BitmapImage x:Key="ExitDisabled" UriSource="/BV/Resources/Exit/close-button-disabled.png" />
        </Style.Resources>
        <Style.BasedOn>
            <Style TargetType="ButtonBase">
                <Setter Property="Control.HorizontalContentAlignment">
                    <Setter.Value>
                        <x:Static Member="HorizontalAlignment.Center" />
                    </Setter.Value>
                </Setter>
                <Setter Property="Control.VerticalContentAlignment">
                    <Setter.Value>
                        <x:Static Member="VerticalAlignment.Center" />
                    </Setter.Value>
                </Setter>
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ButtonBase">
                            <Border Name="border" SnapsToDevicePixels="True" RenderOptions.CachingHint="Cache" RenderOptions.EdgeMode="Aliased" RenderOptions.BitmapScalingMode="NearestNeighbor">
                                <Border.Background>
                                    <ImageBrush
                                        AlignmentX="Center"
                                        AlignmentY="Center"
                                        ImageSource="{StaticResource ExitDefault}"
                                        TileMode="None" RenderOptions.CachingHint="Cache" RenderOptions.EdgeMode="Aliased" RenderOptions.BitmapScalingMode="NearestNeighbor" />
                                </Border.Background>
                                <ContentPresenter
                                    Name="contentPresenter"
                                    HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                    Content="{TemplateBinding ContentControl.Content}"
                                    ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}"
                                    ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                    Focusable="False"
                                    RecognizesAccessKey="True"
                                    SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Button.IsDefaulted">
                                    <Setter TargetName="border" Property="Panel.Background">
                                        <Setter.Value>
                                            <ImageBrush
                                                AlignmentX="Center"
                                                AlignmentY="Center"
                                                ImageSource="{StaticResource ExitDefault}"
                                                TileMode="None" RenderOptions.CachingHint="Cache" RenderOptions.EdgeMode="Aliased" RenderOptions.BitmapScalingMode="NearestNeighbor" />
                                        </Setter.Value>
                                    </Setter>
                                    <Trigger.Value>
                                        <s:Boolean>True</s:Boolean>
                                    </Trigger.Value>
                                </Trigger>
                                <Trigger Property="UIElement.IsMouseOver">
                                    <Setter TargetName="border" Property="Panel.Background">
                                        <Setter.Value>
                                            <ImageBrush
                                                AlignmentX="Center"
                                                AlignmentY="Center"
                                                ImageSource="{StaticResource ExitMouseOver}"
                                                TileMode="None" RenderOptions.CachingHint="Cache" RenderOptions.EdgeMode="Aliased" RenderOptions.BitmapScalingMode="NearestNeighbor" />
                                        </Setter.Value>
                                    </Setter>
                                    <Trigger.Value>
                                        <s:Boolean>True</s:Boolean>
                                    </Trigger.Value>
                                </Trigger>
                                <Trigger Property="ButtonBase.IsPressed">
                                    <Setter TargetName="border" Property="Panel.Background">
                                        <Setter.Value>
                                            <ImageBrush
                                                AlignmentX="Center"
                                                AlignmentY="Center"
                                                ImageSource="{StaticResource ExitPressed}"
                                                TileMode="None" RenderOptions.CachingHint="Cache" RenderOptions.EdgeMode="Aliased" RenderOptions.BitmapScalingMode="NearestNeighbor" />
                                        </Setter.Value>
                                    </Setter>
                                    <Trigger.Value>
                                        <s:Boolean>True</s:Boolean>
                                    </Trigger.Value>
                                </Trigger>
                                <Trigger Property="UIElement.IsEnabled">
                                    <Setter TargetName="border" Property="Panel.Background">
                                        <Setter.Value>
                                            <ImageBrush
                                                AlignmentX="Center"
                                                AlignmentY="Center"
                                                ImageSource="{StaticResource ExitDisabled}"
                                                TileMode="None" RenderOptions.CachingHint="Cache" RenderOptions.EdgeMode="Aliased" RenderOptions.BitmapScalingMode="NearestNeighbor" />
                                        </Setter.Value>
                                    </Setter>
                                    <Trigger.Value>
                                        <s:Boolean>False</s:Boolean>
                                    </Trigger.Value>
                                </Trigger>
                                <Trigger Property="ToggleButton.IsChecked">
                                    <Setter TargetName="border" Property="Panel.Background">
                                        <Setter.Value>
                                            <ImageBrush
                                                AlignmentX="Center"
                                                AlignmentY="Center"
                                                ImageSource="{StaticResource ExitMouseOver}"
                                                TileMode="None" RenderOptions.CachingHint="Cache" RenderOptions.EdgeMode="Aliased" RenderOptions.BitmapScalingMode="NearestNeighbor" />
                                        </Setter.Value>
                                    </Setter>
                                    <Trigger.Value>
                                        <s:Boolean>True</s:Boolean>
                                    </Trigger.Value>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Style.BasedOn>
    </Style>
</ResourceDictionary>
