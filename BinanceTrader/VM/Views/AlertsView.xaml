<!--
    *
    *MIT License
    *
    *Copyright (c) 2022 S Christison
    *
    *Permission is hereby granted, free of charge, to any person obtaining a copy
    *of this software and associated documentation files (the "Software"), to deal
    *in the Software without restriction, including without limitation the rights
    *to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
    *copies of the Software, and to permit persons to whom the Software is
    *furnished to do so, subject to the following conditions:
    *
    *The above copyright notice and this permission notice shall be included in all
    *copies or substantial portions of the Software.
    *
    *THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
    *IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
    *FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
    *AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
    *LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
    *OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
    *SOFTWARE.
    *
-->

<Window
    x:Class="BTNET.VM.Views.AlertsView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:BTNET.VM.Controls"
    xmlns:converters="clr-namespace:BTNET.BV.Converters"
    xmlns:enums="clr-namespace:BTNET.BV.Enum"
    xmlns:system="clr-namespace:System;assembly=mscorlib"
    xmlns:tk="clr-namespace:BTNET.Toolkit"
    x:Name="AlertsWindow"
    Title="Alerts"
    Width="430"
    Height="290"
    MinWidth="480"
    MinHeight="290"
    MaxWidth="480"
    Background="Black"
    Icon="/BV/Resources/bellicon.png"
    ResizeMode="CanResizeWithGrip"
    SizeChanged="Window_SizeChanged"
    ShowInTaskbar="False"
    WindowStyle="None">

    <Window.Resources>
        <ResourceDictionary>
            <BooleanToVisibilityConverter x:Key="BoolToVis" />
            <BitmapImage x:Key="AddAlert" UriSource="/BV/Resources/addalert.png" />
            <BitmapImage x:Key="Top" UriSource="/BV/Resources/Top/top.png" />
            <ObjectDataProvider
                x:Key="directionBinding"
                MethodName="GetValues"
                ObjectType="{x:Type system:Enum}">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="enums:Direction" />
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>
            <ObjectDataProvider
                x:Key="alertStatus"
                MethodName="GetValues"
                ObjectType="{x:Type system:Enum}">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="enums:AlertStatus" />
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>
        </ResourceDictionary>
    </Window.Resources>

    <WindowChrome.WindowChrome>
        <WindowChrome
            CaptionHeight="0"
            CornerRadius="0"
            GlassFrameThickness="0"
            ResizeBorderThickness="5,0,5,5"
            UseAeroCaptionButtons="False" />
    </WindowChrome.WindowChrome>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition x:Name="NewAlertCol" Width="0" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="8" />
            <RowDefinition Height="20" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Rectangle
            Grid.Row="0"
            Grid.ColumnSpan="2"
            Height="8"
            VerticalAlignment="Top"
            Fill="{DynamicResource MenuPopupBrush3}"
            MouseLeftButtonDown="DragWindowOrMaximize" />
        <StackPanel
            Grid.Row="1"
            Grid.ColumnSpan="2"
            Background="#242325">
            <Grid>
                <Grid Width="40" HorizontalAlignment="Left">
                    <Button
                        Padding="0"
                        HorizontalAlignment="Left"
                        Background="Transparent"
                        BorderThickness="0"
                        Click="Button_Click"
                        IsEnabled="{Binding AlertVM.ToggleAlertEnabled, Mode=OneWay}"
                        Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                        ToolTip="Open/Close the Panel to Add an Alert">
                        <Image
                            Width="18"
                            Height="18"
                            Source="{StaticResource AddAlert}" />
                        <Button.Triggers>
                            <EventTrigger RoutedEvent="Button.Click">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <converters:GridLengthAnimation
                                            Storyboard.Target="{Binding ElementName=NewAlertCol, Mode=OneWay}"
                                            Storyboard.TargetProperty="Width"
                                            To="{Binding AlertVM.ToggleAlertSideMenu, Mode=OneWay}"
                                            Duration="0:0:0.5" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </Button.Triggers>
                    </Button>
                    <Button
                        x:Name="ToggleWindowTopButton"
                        Width="20"
                        Height="20"
                        Padding="0"
                        HorizontalAlignment="Right"
                        Background="Transparent"
                        BorderThickness="0"
                        Click="Button_Click_1"
                        Style="{StaticResource DefaultButton}"
                        ToolTip="Toggle Window on Top">
                        <Image
                            MouseDown="Image_MouseDown"
                            MouseEnter="Image_MouseEnter"
                            MouseLeave="Image_MouseLeave"
                            MouseUp="Image_MouseUp"
                            Source="{StaticResource Top}" />
                    </Button>
                </Grid>
                <Button
                    Width="20"
                    Height="20"
                    Padding="0"
                    HorizontalAlignment="Right"
                    Background="Transparent"
                    BorderThickness="0"
                    Command="{Binding MainVM.ToggleAlertsCommand, Mode=OneWay}"
                    Style="{StaticResource ExitButton}"
                    ToolTip="Exit Alerts" />
            </Grid>
        </StackPanel>
        <Border
            Grid.Row="2"
            BorderBrush="{StaticResource MenuPopupBrush5}"
            BorderThickness="0,0,1,0">
            <StackPanel Background="Black">
                <controls:SortableListView Background="Transparent" BorderThickness="0">
                    <controls:SortableListView.View>
                        <GridView>
                            <GridViewColumn Header="" />
                        </GridView>
                    </controls:SortableListView.View>
                </controls:SortableListView>
                <TextBlock
                    Margin="4,2,4,0"
                    HorizontalAlignment="Center"
                    Foreground="White"
                    Text="Alert Symbol" />
                <TextBox
                    Width="80"
                    Height="20"
                    HorizontalAlignment="Center"
                    VerticalContentAlignment="Center"
                    Style="{StaticResource TextBoxRounded}"
                    Text="{Binding AlertVM.AlertSymbol}" />
                <TextBlock
                    Margin="4,0,4,0"
                    HorizontalAlignment="Center"
                    Foreground="White"
                    Text="Alert Price" />
                <tk:DecimalUpDown
                    Width="80"
                    HorizontalAlignment="Center"
                    DefaultValue="{Binding PriceTickSize, Mode=OneWay}"
                    Increment="{Binding PriceTickSize, Mode=OneWay}"
                    Minimum="{Binding PriceTickSize, Mode=OneWay}"
                    Text="{Binding AlertVM.AlertPrice}"
                    Value="{Binding AlertVM.AlertPrice}" />
                <CheckBox
                    x:Name="cbPlaySound"
                    Margin="6,4,0,0"
                    Command="{Binding AlertVM.PlaySoundCommand, Mode=OneWay}"
                    Content="Play Sound"
                    Foreground="White"
                    IsChecked="{Binding AlertVM.PlaySoundBool, Mode=OneWay}" />
                <CheckBox
                    x:Name="cbRepeatAlert"
                    Margin="6,4,0,0"
                    Command="{Binding AlertVM.RepeatAlertCommand, Mode=OneWay}"
                    Content="Repeat Alert"
                    Foreground="White"
                    IsChecked="{Binding AlertVM.RepeatAlertBool, Mode=OneWay}"
                    ToolTip="Whether the alert should repeat" />
                <CheckBox
                    x:Name="cbReverse"
                    Margin="6,4,0,0"
                    Command="{Binding AlertVM.ReverseBeforeAlertCommand, Mode=OneWay}"
                    Content="Reverse First"
                    Foreground="White"
                    IsChecked="{Binding AlertVM.ReverseFirstBool, Mode=OneWay}"
                    ToolTip="True if the price has to reverse before the alert can trigger again. &#x0a;Will also prevent alerts from running instantly" />
                <TextBlock
                    Margin="4,0,4,0"
                    HorizontalAlignment="Center"
                    Foreground="White"
                    Text="Repeat Interval"
                    Visibility="{Binding AlertVM.RepeatAlertBool, Converter={StaticResource BoolToVis}, Mode=OneWay}" />
                <tk:DecimalUpDown
                    Width="80"
                    HorizontalAlignment="Center"
                    DefaultValue="1"
                    Increment="1"
                    Minimum="1"
                    Text="{Binding AlertVM.AlertInterval}"
                    Visibility="{Binding AlertVM.RepeatAlertBool, Converter={StaticResource BoolToVis}, Mode=OneWay}"
                    Value="{Binding AlertVM.AlertInterval}" />
                <TextBlock
                    Margin="0,1,0,0"
                    HorizontalAlignment="Center"
                    Foreground="White"
                    Text="Direction" />
                <ComboBox
                    x:Name="cbDirection"
                    Width="85"
                    ItemsSource="{Binding Source={StaticResource directionBinding}, Mode=OneWay}"
                    SelectedItem="{Binding AlertVM.AlertDirection}" />
                <StackPanel Grid.Row="2" Orientation="Vertical" />
                <Button
                    x:Name="AddAlert"
                    Margin="7,2,7,0"
                    Command="{Binding AlertVM.AddAlertCommand, Mode=OneWay}"
                    Content="Add Alert" />
            </StackPanel>
        </Border>

        <controls:SortableListView
            x:Name="AlertListView"
            Grid.Row="2"
            Grid.Column="1"
            Background="Black"
            BorderThickness="0"
            Foreground="AntiqueWhite"
            ItemsSource="{Binding AlertVM.Alerts, Mode=OneWay}"
            ScrollViewer.HorizontalScrollBarVisibility="Hidden"
            ScrollViewer.VerticalScrollBarVisibility="Hidden"
            SelectedItem="{Binding AlertVM.SelectedAlert}">
            <controls:SortableListView.View>
                <GridView AllowsColumnReorder="false">
                    <GridViewColumn
                        Width="106"
                        DisplayMemberBinding="{Binding AlertSymbol, Mode=OneWay}"
                        Header="Symbol" />
                    <GridViewColumn
                        Width="106"
                        DisplayMemberBinding="{Binding AlertPrice, Mode=OneWay}"
                        Header="Price" />
                    <GridViewColumn
                        Width="75"
                        DisplayMemberBinding="{Binding RepeatInterval, Mode=OneWay}"
                        Header="Interval" />
                    <GridViewColumn
                        Width="60"
                        DisplayMemberBinding="{Binding AlertDirection, Mode=OneWay}"
                        Header="Direction" />
                    <GridViewColumn
                        Width="73"
                        DisplayMemberBinding="{Binding AlertStatus, Mode=OneWay}"
                        Header="Status" />
                    <GridViewColumn Width="60" Header="">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <ComboBox Width="20" ToolTip="View the Settings for this Alert">
                                        <CheckBox
                                            Content="Has Sound"
                                            IsChecked="{Binding AlertHasSound, Mode=OneWay}"
                                            IsEnabled="False" />
                                        <CheckBox
                                            Content="Repeats"
                                            IsChecked="{Binding AlertRepeats, Mode=OneWay}"
                                            IsEnabled="False" />
                                        <CheckBox
                                            Content="Reverse First"
                                            IsChecked="{Binding ReverseBeforeRepeat, Mode=OneWay}"
                                            IsEnabled="False" />
                                    </ComboBox>
                                    <Button
                                        Margin="2,0,0,0"
                                        Width="15"
                                        Height="17"
                                        Background="Transparent"
                                        BorderThickness="0"
                                        Command="{Binding ElementName=AlertListView, Path=DataContext.AlertVM.RemoveAlertCommand, Mode=OneWay}"
                                        CommandParameter="{Binding}"
                                        Style="{StaticResource RemoveButton}">
                                    </Button>
                                </StackPanel>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <!--<GridViewColumn Header="A" Width="40" DisplayMemberBinding="{Binding AlertHasAction}" />-->
                </GridView>
            </controls:SortableListView.View>
        </controls:SortableListView>
    </Grid>
</Window>
