name: Build Binance Trader

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1.3

      - name: Install .NET Framework 4.8 SDK
        run: choco install dotnetfx --version=4.8.0.20190930 -y

      - name: Setup Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Auto-update version on main/master
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
        run: |
          # Находим файл проекта
          $projectPath = "BinanceTrader\Binance Trader.csproj"
          if (Test-Path $projectPath) {
            Write-Host "Found project file at: $projectPath"
            
            # Читаем текущую версию
            $content = Get-Content $projectPath -Raw
            $versionMatch = [regex]::Match($content, '<Version>([^<]+)</Version>')
            
            if ($versionMatch.Success) {
              $currentVersion = $versionMatch.Groups[1].Value
              Write-Host "Current version: $currentVersion"
              
              # Разбираем версию
              $versionParts = $currentVersion.Split('.')
              if ($versionParts.Length -ge 4) {
                $major = [int]$versionParts[0]
                $minor = [int]$versionParts[1]
                $build = [int]$versionParts[2]
                $revision = [int]$versionParts[3]
                
                # Увеличиваем build number
                $build++
                $newVersion = "$major.$minor.$build.$revision"
                
                Write-Host "New version: $newVersion"
                
                # Обновляем версии в файле
                $content = $content -replace '<Version>[^<]+</Version>', "<Version>$newVersion</Version>"
                $content = $content -replace '<FileVersion>[^<]+</FileVersion>', "<FileVersion>$newVersion</FileVersion>"
                $content = $content -replace '<AssemblyVersion>[^<]+</AssemblyVersion>', "<AssemblyVersion>$newVersion</AssemblyVersion>"
                
                # Записываем обновленный файл
                Set-Content -Path $projectPath -Value $content -Encoding UTF8
                
                # Коммитим изменения
                git add $projectPath
                git commit -m "Auto-update version to $newVersion [skip ci]"
                git push
                
                Write-Host "Version updated to $newVersion"
                
                # Сохраняем версию для создания релиза
                echo "VERSION=$newVersion" >> $env:GITHUB_ENV
              }
            }
          } else {
            Write-Host "Project file not found"
          }

      - name: Restore NuGet packages
        run: nuget restore "Binance Trader.sln"

      - name: Build solution
        run: |
          msbuild "Binance Trader.sln" /p:Configuration=Release /p:Platform="Any CPU" /p:RestorePackages=false /p:RunAnalyzersDuringBuild=false /p:RunAnalyzersDuringLiveAnalysis=false /verbosity:minimal

      - name: Archive build output
        run: |
          $buildPath = "BinanceTrader\bin\Release\net48"
          $artifactName = "binance-trader-Release-net48.zip"
          Compress-Archive -Path "$buildPath\*" -DestinationPath "$artifactName" -Force

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: binance-trader-Release-net48
          path: binance-trader-Release-net48.zip
          retention-days: 30

      - name: Create GitHub Release
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ env.VERSION }}
          name: Binance Trader v${{ env.VERSION }}
          body: |
            ## Binance Trader v${{ env.VERSION }}
            
            ### Что нового:
            - Автоматическая сборка и релиз
            - Исправления ошибок компиляции
            - Обновления API
            
            ### Скачать:
            Распакуйте архив и запустите `Binance Trader.exe`
            
            ### Системные требования:
            - Windows 10/11
            - .NET Framework 4.8
          files: binance-trader-Release-net48.zip
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 