#!/usr/bin/env pwsh
<#
.SYNOPSIS
    –ë—ã—Å—Ç—Ä—ã–π –∑–∞–ø—É—Å–∫ —Å–±–æ—Ä–∫–∏ Binance Trader —á–µ—Ä–µ–∑ GitHub Actions

.DESCRIPTION
    –ü—Ä–æ—Å—Ç–æ–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Å–±–æ—Ä–∫–∏ —Å –ø—Ä–µ–¥—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏

.EXAMPLE
    .\quick-build.ps1
    –ó–∞–ø—É—Å–∫–∞–µ—Ç —Å–±–æ—Ä–∫—É Release x64

.EXAMPLE
    .\quick-build.ps1 -Debug
    –ó–∞–ø—É—Å–∫–∞–µ—Ç —Å–±–æ—Ä–∫—É Debug x64

.EXAMPLE
    .\quick-build.ps1 -Platform x86
    –ó–∞–ø—É—Å–∫–∞–µ—Ç —Å–±–æ—Ä–∫—É Release x86
#>

param(
    [switch]$Debug,
    [ValidateSet("x64", "x86", "AnyCPU")]
    [string]$Platform = "x64",
    [string]$Branch = "main"
)

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
$RepoOwner = "HypsyNZ"
$RepoName = "BinanceTrader.NET"

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
$Configuration = if ($Debug) { "Debug" } else { "Release" }

Write-Host "üöÄ –ë—ã—Å—Ç—Ä—ã–π –∑–∞–ø—É—Å–∫ —Å–±–æ—Ä–∫–∏ Binance Trader" -ForegroundColor Cyan
Write-Host "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è: $Configuration" -ForegroundColor White
Write-Host "–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞: $Platform" -ForegroundColor White
Write-Host "–í–µ—Ç–∫–∞: $Branch" -ForegroundColor White

# –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω
$token = $env:GITHUB_TOKEN
if (-not $token) {
    Write-Error "‚ùå GITHUB_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è"
    Write-Host "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è GITHUB_TOKEN –∏–ª–∏ –ø–µ—Ä–µ–¥–∞–π—Ç–µ —Ç–æ–∫–µ–Ω –≤ –ø–∞—Ä–∞–º–µ—Ç—Ä–µ" -ForegroundColor Yellow
    exit 1
}

# –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏
try {
    $remoteUrl = git config --get remote.origin.url
    if ($remoteUrl -match "github\.com[:/]([^/]+)/([^/]+?)(?:\.git)?$") {
        $RepoOwner = $matches[1]
        $RepoName = $matches[2]
        Write-Host "–†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π: $RepoOwner/$RepoName" -ForegroundColor Green
    }
}
catch {
    Write-Warning "–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –∏–∑ git config, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é"
}

# –ó–∞–ø—É—Å–∫–∞–µ–º —Å–±–æ—Ä–∫—É
$headers = @{
    "Authorization" = "token $token"
    "Accept" = "application/vnd.github.v3+json"
    "User-Agent" = "BinanceTrader-QuickBuild"
}

$body = @{
    ref = $Branch
    inputs = @{
        configuration = $Configuration
        platform = $Platform
        create_artifacts = $true
        run_tests = $false
        branch = $Branch
    }
}

$jsonBody = $body | ConvertTo-Json -Depth 10
$url = "https://api.github.com/repos/$RepoOwner/$RepoName/actions/workflows/manual-build.yml/dispatches"

Write-Host "`nüì° –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ —Å–±–æ—Ä–∫—É..." -ForegroundColor Yellow

try {
    $response = Invoke-RestMethod -Uri $url -Method Post -Headers $headers -Body $jsonBody -ContentType "application/json"
    Write-Host "‚úÖ –°–±–æ—Ä–∫–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω–∞!" -ForegroundColor Green
    Write-Host "üìã –°—Å—ã–ª–∫–∞ –Ω–∞ Actions: https://github.com/$RepoOwner/$RepoName/actions" -ForegroundColor Blue
    Write-Host "üìã –°—Å—ã–ª–∫–∞ –Ω–∞ Manual Build: https://github.com/$RepoOwner/$RepoName/actions/workflows/manual-build.yml" -ForegroundColor Blue
}
catch {
    Write-Error "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Å–±–æ—Ä–∫–∏: $($_.Exception.Message)"
    if ($_.Exception.Response) {
        $reader = New-Object System.IO.StreamReader($_.Exception.Response.GetResponseStream())
        $responseBody = $reader.ReadToEnd()
        Write-Error "–û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞: $responseBody"
    }
    exit 1
}

Write-Host "`nüéâ –ì–æ—Ç–æ–≤–æ! –°–±–æ—Ä–∫–∞ –∑–∞–ø—É—â–µ–Ω–∞ –≤ GitHub Actions" -ForegroundColor Cyan 